# 2×n 타일링 문제는 노트에 그림을 그리면서 풀어보면 규칙이 보인다.
# 그 규칙을 식으로 적용 시켜 풀면 되는 간단한 DP 문제이다.

# N = 1 일때 2 * 1 채 울수 있는 건 (2 * 1) 1가지
# N = 2 일때 2 * 2 채 울수 있는 건 (2 * 1) *2, (1 * 2 )*2 총 2가지
# N = 3 일때 2 * 3 채 울수 있는 건 (2 * 1) *3 ,(2 * 1) *2 + (1 * 2) *1 , (1 * 2) * 1, (2 * 2 ) *2 총 3가지

# N = 4 일때 는 5가지 경 우의수가 나온다

# 점화식은 DP[N] = DP[N - 1] + DP[N - 2] 이라고 볼수 있다.
# 이를 이용해서 문제를 풀면 된다.

import sys

input = sys.stdin.readline
# N의 범위가 1000까지 이므로 1001개로 초기화
DP = [0] * 1001
DP[1] , DP[2] , DP[3] , DP[4] = 1 , 2 , 3 , 5
# N의 범위가 1000까지 이므로 경우의 수가 상당히 커질수 있으므로 문제에서 방법의 수를 10,007로 나눈 나머지를 출력!
mod = 10007

# 알고 싶은 N입력
n=int(input())

for i in range(5 , n + 1):
    DP[i] = (DP[i - 1] + DP[i - 2]) % mod

# 출력
print(DP[n])
